// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int    @id @default(autoincrement())
  fullName String
  phone    String @unique
  email String @unique
  password String

  phoneVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt DateTime @updatedAt

  cart Cart[]
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]
}

model Product {
  id       Int     @id @default(autoincrement())
  name     String
  imageUrl String
  active   Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]
  productItems ProductItem[]
}

model ProductItem {
  id       Int     @id @default(autoincrement())

  price Int
  size Int?
  pizzaType Int?

 product Product @relation(fields: [productId], references: [id])
  productId Int
}

model Ingredient {
id       Int     @id @default(autoincrement())
name String
price Int
imageUrl String

products Product[]

createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
 id       Int     @id @default(autoincrement())

 user User? @relation(fields: [userId], references: [id])
 userId Int?

token String

 totalAmount Int @default(0)
 
 createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
 id       Int     @id @default(autoincrement())

 product Product @relation(fields: [productId], references: [id])
  productId Int

  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int 
}